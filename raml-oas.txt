{
    "raml": "#%RAML 1.0\r\ntitle: Online Banking REST API\r\nversion: V1\r\nbaseUri: http:\/\/95.217.118.53:8080\/\r\nbaseUriParameters: {}\r\nprotocols:\r\n- HTTP\r\ndocumentation:\r\n- title: Online Banking REST API\r\n  content: Public API.\r\ntypes:\r\n  BankAccount:\r\n    displayName: BankAccount\r\n    type: object\r\n    properties:\r\n      accountBalance:\r\n        required: false\r\n        displayName: accountBalance\r\n        type: integer\r\n        format: int64\r\n      accountNumber:\r\n        required: false\r\n        displayName: accountNumber\r\n        type: integer\r\n        format: int64\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      user:\r\n        required: false\r\n        displayName: user\r\n        type: NameDto\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n  Branch:\r\n    displayName: Branch\r\n    type: object\r\n    properties:\r\n      access:\r\n        required: false\r\n        displayName: access\r\n        type: string\r\n      atmAtBranch:\r\n        required: false\r\n        displayName: atmAtBranch\r\n        type: string\r\n      branchMediatedServiceName:\r\n        required: false\r\n        displayName: branchMediatedServiceName\r\n        type: string\r\n      branchName:\r\n        required: false\r\n        displayName: branchName\r\n        type: string\r\n      branchType:\r\n        required: false\r\n        displayName: branchType\r\n        type: string\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      customerSegment:\r\n        required: false\r\n        displayName: customerSegment\r\n        type: string\r\n      faxNumber:\r\n        required: false\r\n        displayName: faxNumber\r\n        type: string\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n  Issue:\r\n    displayName: Issue\r\n    type: object\r\n    properties:\r\n      assertions:\r\n        required: false\r\n        displayName: assertions\r\n        type: string\r\n      assignedTo:\r\n        required: false\r\n        displayName: assignedTo\r\n        type: string\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      description:\r\n        required: false\r\n        displayName: description\r\n        type: string\r\n      endpoint:\r\n        required: false\r\n        displayName: endpoint\r\n        type: string\r\n      env:\r\n        required: false\r\n        displayName: env\r\n        type: string\r\n      failedAssertions:\r\n        required: false\r\n        displayName: failedAssertions\r\n        type: string\r\n      headers:\r\n        required: false\r\n        displayName: headers\r\n        type: array\r\n        items:\r\n          type: string\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      issueName:\r\n        required: false\r\n        displayName: issueName\r\n        type: string\r\n      issueStatus:\r\n        required: false\r\n        displayName: issueStatus\r\n        type: string\r\n        enum:\r\n        - OPEN\r\n        - CLOSED\r\n      issueType:\r\n        required: false\r\n        displayName: issueType\r\n        type: string\r\n        enum:\r\n        - MANUAL\r\n        - AUTOMATIC\r\n      method:\r\n        required: false\r\n        displayName: method\r\n        type: string\r\n        enum:\r\n        - GET\r\n        - HEAD\r\n        - POST\r\n        - PUT\r\n        - PATCH\r\n        - DELETE\r\n        - OPTIONS\r\n        - TRACE\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      project:\r\n        required: false\r\n        displayName: project\r\n        type: Project\r\n      requestBody:\r\n        required: false\r\n        displayName: requestBody\r\n        type: string\r\n      responseBody:\r\n        required: false\r\n        displayName: responseBody\r\n        type: string\r\n      responseHeaders:\r\n        required: false\r\n        displayName: responseHeaders\r\n        type: string\r\n      result:\r\n        required: false\r\n        displayName: result\r\n        type: string\r\n      statusCode:\r\n        required: false\r\n        displayName: statusCode\r\n        type: string\r\n      tags:\r\n        required: false\r\n        displayName: tags\r\n        type: array\r\n        items:\r\n          type: string\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n  Member:\r\n    displayName: Member\r\n    type: object\r\n    properties:\r\n      confirmPassword:\r\n        required: false\r\n        displayName: confirmPassword\r\n        type: string\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      email:\r\n        required: false\r\n        displayName: email\r\n        type: string\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      name:\r\n        required: false\r\n        displayName: name\r\n        type: string\r\n      orgId:\r\n        required: false\r\n        displayName: orgId\r\n        type: string\r\n      orgRole:\r\n        required: false\r\n        displayName: orgRole\r\n        type: string\r\n        enum:\r\n        - READ\r\n        - WRITE\r\n        - ADMIN\r\n        - USER\r\n        - PROJECT_MANAGER\r\n        - ENTERPRISE_ADMIN\r\n        - BANK_ACCOUNTANT\r\n        - BANK_MANAGER\r\n      password:\r\n        required: false\r\n        displayName: password\r\n        type: string\r\n      username:\r\n        required: false\r\n        displayName: username\r\n        type: string\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n  Message:\r\n    displayName: Message\r\n    type: object\r\n    properties:\r\n      key:\r\n        required: false\r\n        displayName: key\r\n        type: string\r\n      type:\r\n        required: false\r\n        displayName: type\r\n        type: string\r\n        enum:\r\n        - INFO\r\n        - ERROR\r\n        - WARNING\r\n      value:\r\n        required: false\r\n        displayName: value\r\n        type: string\r\n  NameDto:\r\n    displayName: NameDto\r\n    type: object\r\n    properties:\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      name:\r\n        required: false\r\n        displayName: name\r\n        type: string\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n  Org:\r\n    displayName: Org\r\n    type: object\r\n    properties:\r\n      billingEmail:\r\n        required: false\r\n        displayName: billingEmail\r\n        type: string\r\n      company:\r\n        required: false\r\n        displayName: company\r\n        type: string\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      description:\r\n        required: false\r\n        displayName: description\r\n        type: string\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      location:\r\n        required: false\r\n        displayName: location\r\n        type: string\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      name:\r\n        required: false\r\n        displayName: name\r\n        type: string\r\n      orgPlan:\r\n        required: false\r\n        displayName: orgPlan\r\n        type: string\r\n        enum:\r\n        - FREE\r\n        - PRO\r\n        - TEAM\r\n        - BASIC\r\n        - BUSINESS\r\n        - ENTERPRISE\r\n        - PAY_AS_YOU_GO\r\n      orgType:\r\n        required: false\r\n        displayName: orgType\r\n        type: string\r\n        enum:\r\n        - PERSONAL\r\n        - TEAM\r\n        - ENTERPRISE\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n  OrgUsers:\r\n    displayName: OrgUsers\r\n    type: object\r\n    properties:\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      org:\r\n        required: false\r\n        displayName: org\r\n        type: NameDto\r\n      orgRole:\r\n        required: false\r\n        displayName: orgRole\r\n        type: string\r\n        enum:\r\n        - READ\r\n        - WRITE\r\n        - ADMIN\r\n        - USER\r\n        - PROJECT_MANAGER\r\n        - ENTERPRISE_ADMIN\r\n        - BANK_ACCOUNTANT\r\n        - BANK_MANAGER\r\n      status:\r\n        required: false\r\n        displayName: status\r\n        type: string\r\n        enum:\r\n        - INVITED\r\n        - ACTIVE\r\n        - INACTIVE\r\n        - DECLINED\r\n        - REMOVED\r\n      users:\r\n        required: false\r\n        displayName: users\r\n        type: UserMinimalDto\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n  PrimaryAccount:\r\n    displayName: PrimaryAccount\r\n    type: object\r\n    properties:\r\n      accountBalance:\r\n        required: false\r\n        displayName: accountBalance\r\n        type: integer\r\n        format: int64\r\n      accountNumber:\r\n        required: false\r\n        displayName: accountNumber\r\n        type: integer\r\n        format: int64\r\n      accountType:\r\n        required: false\r\n        displayName: accountType\r\n        type: string\r\n        enum:\r\n        - SAVING\r\n        - CURRENT\r\n        - CREDIT\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n  PrimaryTransaction:\r\n    displayName: PrimaryTransaction\r\n    type: object\r\n    properties:\r\n      amount:\r\n        required: false\r\n        displayName: amount\r\n        type: number\r\n        format: double\r\n      availableBalance:\r\n        required: false\r\n        displayName: availableBalance\r\n        type: number\r\n        format: double\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      description:\r\n        required: false\r\n        displayName: description\r\n        type: string\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      status:\r\n        required: false\r\n        displayName: status\r\n        type: string\r\n      type:\r\n        required: false\r\n        displayName: type\r\n        type: string\r\n      user:\r\n        required: false\r\n        displayName: user\r\n        type: NameDto\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n  Project:\r\n    displayName: Project\r\n    type: object\r\n    properties:\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      description:\r\n        required: false\r\n        displayName: description\r\n        type: string\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      name:\r\n        required: false\r\n        displayName: name\r\n        type: string\r\n      org:\r\n        required: false\r\n        displayName: org\r\n        type: NameDto\r\n      refId:\r\n        required: false\r\n        displayName: refId\r\n        type: string\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n  Recepient:\r\n    displayName: Recepient\r\n    type: object\r\n    properties:\r\n      accountNumber:\r\n        required: false\r\n        displayName: accountNumber\r\n        type: string\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      description:\r\n        required: false\r\n        displayName: description\r\n        type: string\r\n      email:\r\n        required: false\r\n        displayName: email\r\n        type: string\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      name:\r\n        required: false\r\n        displayName: name\r\n        type: string\r\n      phone:\r\n        required: false\r\n        displayName: phone\r\n        type: string\r\n      user:\r\n        required: false\r\n        displayName: user\r\n        type: NameDto\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n  Response\u00ABBankAccount\u00BB:\r\n    displayName: Response\u00ABBankAccount\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: BankAccount\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABBranch\u00BB:\r\n    displayName: Response\u00ABBranch\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: Branch\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABIssue\u00BB:\r\n    displayName: Response\u00ABIssue\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: Issue\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABList\u00ABBankAccount\u00BB\u00BB:\r\n    displayName: Response\u00ABList\u00ABBankAccount\u00BB\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: array\r\n        items:\r\n          type: BankAccount\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABList\u00ABBranch\u00BB\u00BB:\r\n    displayName: Response\u00ABList\u00ABBranch\u00BB\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: array\r\n        items:\r\n          type: Branch\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABList\u00ABIssue\u00BB\u00BB:\r\n    displayName: Response\u00ABList\u00ABIssue\u00BB\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: array\r\n        items:\r\n          type: Issue\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABList\u00ABOrgUsers\u00BB\u00BB:\r\n    displayName: Response\u00ABList\u00ABOrgUsers\u00BB\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: array\r\n        items:\r\n          type: OrgUsers\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABList\u00ABOrg\u00BB\u00BB:\r\n    displayName: Response\u00ABList\u00ABOrg\u00BB\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: array\r\n        items:\r\n          type: Org\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABList\u00ABPrimaryAccount\u00BB\u00BB:\r\n    displayName: Response\u00ABList\u00ABPrimaryAccount\u00BB\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: array\r\n        items:\r\n          type: PrimaryAccount\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABList\u00ABPrimaryTransaction\u00BB\u00BB:\r\n    displayName: Response\u00ABList\u00ABPrimaryTransaction\u00BB\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: array\r\n        items:\r\n          type: PrimaryTransaction\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABList\u00ABProject\u00BB\u00BB:\r\n    displayName: Response\u00ABList\u00ABProject\u00BB\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: array\r\n        items:\r\n          type: Project\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABList\u00ABRecepient\u00BB\u00BB:\r\n    displayName: Response\u00ABList\u00ABRecepient\u00BB\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: array\r\n        items:\r\n          type: Recepient\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABList\u00ABSavingsAccount\u00BB\u00BB:\r\n    displayName: Response\u00ABList\u00ABSavingsAccount\u00BB\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: array\r\n        items:\r\n          type: SavingsAccount\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABList\u00ABSavingsTransaction\u00BB\u00BB:\r\n    displayName: Response\u00ABList\u00ABSavingsTransaction\u00BB\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: array\r\n        items:\r\n          type: SavingsTransaction\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABList\u00ABTransfers\u00BB\u00BB:\r\n    displayName: Response\u00ABList\u00ABTransfers\u00BB\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: array\r\n        items:\r\n          type: Transfers\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABOrgUsers\u00BB:\r\n    displayName: Response\u00ABOrgUsers\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: OrgUsers\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABOrg\u00BB:\r\n    displayName: Response\u00ABOrg\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: Org\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABPrimaryAccount\u00BB:\r\n    displayName: Response\u00ABPrimaryAccount\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: PrimaryAccount\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABPrimaryTransaction\u00BB:\r\n    displayName: Response\u00ABPrimaryTransaction\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: PrimaryTransaction\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABProject\u00BB:\r\n    displayName: Response\u00ABProject\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: Project\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABRecepient\u00BB:\r\n    displayName: Response\u00ABRecepient\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: Recepient\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABSavingsAccount\u00BB:\r\n    displayName: Response\u00ABSavingsAccount\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: SavingsAccount\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABSavingsTransaction\u00BB:\r\n    displayName: Response\u00ABSavingsTransaction\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: SavingsTransaction\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABTransfers\u00BB:\r\n    displayName: Response\u00ABTransfers\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: Transfers\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABUsers\u00BB:\r\n    displayName: Response\u00ABUsers\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: Users\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  Response\u00ABboolean\u00BB:\r\n    displayName: Response\u00ABboolean\u00BB\r\n    type: object\r\n    properties:\r\n      data:\r\n        required: false\r\n        displayName: data\r\n        type: boolean\r\n      errors:\r\n        required: false\r\n        displayName: errors\r\n        type: boolean\r\n      messages:\r\n        required: false\r\n        displayName: messages\r\n        type: array\r\n        items:\r\n          type: Message\r\n      requestId:\r\n        required: false\r\n        displayName: requestId\r\n        type: string\r\n      requestTime:\r\n        required: false\r\n        displayName: requestTime\r\n        type: datetime\r\n      totalElements:\r\n        required: false\r\n        displayName: totalElements\r\n        type: integer\r\n        format: int64\r\n      totalPages:\r\n        required: false\r\n        displayName: totalPages\r\n        type: integer\r\n        format: int32\r\n  SavingsAccount:\r\n    displayName: SavingsAccount\r\n    type: object\r\n    properties:\r\n      accountBalance:\r\n        required: false\r\n        displayName: accountBalance\r\n        type: number\r\n        format: double\r\n      accountNumber:\r\n        required: false\r\n        displayName: accountNumber\r\n        type: integer\r\n        format: int32\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      user:\r\n        required: false\r\n        displayName: user\r\n        type: NameDto\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n  SavingsTransaction:\r\n    displayName: SavingsTransaction\r\n    type: object\r\n    properties:\r\n      amount:\r\n        required: false\r\n        displayName: amount\r\n        type: number\r\n        format: double\r\n      availableBalance:\r\n        required: false\r\n        displayName: availableBalance\r\n        type: number\r\n        format: double\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      description:\r\n        required: false\r\n        displayName: description\r\n        type: string\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      status:\r\n        required: false\r\n        displayName: status\r\n        type: string\r\n      type:\r\n        required: false\r\n        displayName: type\r\n        type: string\r\n      user:\r\n        required: false\r\n        displayName: user\r\n        type: NameDto\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n  Transfers:\r\n    displayName: Transfers\r\n    type: object\r\n    properties:\r\n      confirmed:\r\n        required: false\r\n        displayName: confirmed\r\n        type: boolean\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      description:\r\n        required: false\r\n        displayName: description\r\n        type: string\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      location:\r\n        required: false\r\n        displayName: location\r\n        type: string\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      transactionType:\r\n        required: false\r\n        displayName: transactionType\r\n        type: string\r\n        enum:\r\n        - DEPOSIT\r\n        - WITHDRAW\r\n        - CHARGE\r\n        - ATM\r\n        - ONLINE\r\n        - POS\r\n        - TRANSFER\r\n        - CHECK\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n  UserMinimalDto:\r\n    displayName: UserMinimalDto\r\n    type: object\r\n    properties:\r\n      company:\r\n        required: false\r\n        displayName: company\r\n        type: string\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      email:\r\n        required: false\r\n        displayName: email\r\n        type: string\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      jobTitle:\r\n        required: false\r\n        displayName: jobTitle\r\n        type: string\r\n      location:\r\n        required: false\r\n        displayName: location\r\n        type: string\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      name:\r\n        required: false\r\n        displayName: name\r\n        type: string\r\n      username:\r\n        required: false\r\n        displayName: username\r\n        type: string\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n  Users:\r\n    displayName: Users\r\n    type: object\r\n    properties:\r\n      accountNonExpired:\r\n        required: false\r\n        displayName: accountNonExpired\r\n        type: boolean\r\n      accountNonLocked:\r\n        required: false\r\n        displayName: accountNonLocked\r\n        type: boolean\r\n      company:\r\n        required: false\r\n        displayName: company\r\n        type: string\r\n      createdBy:\r\n        required: false\r\n        displayName: createdBy\r\n        type: string\r\n      createdDate:\r\n        required: false\r\n        displayName: createdDate\r\n        type: datetime\r\n      credentialsNonExpired:\r\n        required: false\r\n        displayName: credentialsNonExpired\r\n        type: boolean\r\n      email:\r\n        required: false\r\n        displayName: email\r\n        type: string\r\n      enabled:\r\n        required: false\r\n        displayName: enabled\r\n        type: boolean\r\n      id:\r\n        required: false\r\n        displayName: id\r\n        type: string\r\n      inactive:\r\n        required: false\r\n        displayName: inactive\r\n        type: boolean\r\n      jobTitle:\r\n        required: false\r\n        displayName: jobTitle\r\n        type: string\r\n      location:\r\n        required: false\r\n        displayName: location\r\n        type: string\r\n      modifiedBy:\r\n        required: false\r\n        displayName: modifiedBy\r\n        type: string\r\n      modifiedDate:\r\n        required: false\r\n        displayName: modifiedDate\r\n        type: datetime\r\n      name:\r\n        required: false\r\n        displayName: name\r\n        type: string\r\n      password:\r\n        required: false\r\n        displayName: password\r\n        type: string\r\n      privileges:\r\n        required: false\r\n        displayName: privileges\r\n        type: array\r\n        items:\r\n          type: string\r\n      username:\r\n        required: false\r\n        displayName: username\r\n        type: string\r\n      version:\r\n        required: false\r\n        displayName: version\r\n        type: integer\r\n        format: int64\r\n\/api\/v1:\r\n  \/bank-account:\r\n    get:\r\n      displayName: findAllBankAccountUsingGET\r\n      description: findAllBankAccount\r\n      queryParameters:\r\n        pageSize:\r\n          required: false\r\n          default: 20\r\n          example:\r\n            value: 20\r\n          displayName: pageSize\r\n          description: pageSize\r\n          type: integer\r\n          format: int32\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABList\u00ABBankAccount\u00BB\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    post:\r\n      displayName: addUsingPOST\r\n      description: add\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: BankAccount\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABBankAccount\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    put:\r\n      displayName: updateUsingPUT\r\n      description: update\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: BankAccount\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABBankAccount\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    \/deposit-amount:\r\n      put:\r\n        displayName: depositUsingPUT\r\n        description: deposit\r\n        body:\r\n          application\/json:\r\n            displayName: request\r\n            description: request\r\n            type: BankAccount\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABboolean\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n    \/withdraw-amount:\r\n      put:\r\n        displayName: withdrawUsingPUT\r\n        description: withdraw\r\n        body:\r\n          application\/json:\r\n            displayName: request\r\n            description: request\r\n            type: BankAccount\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABboolean\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n    \/{id}:\r\n      uriParameters:\r\n        id:\r\n          required: true\r\n          displayName: id\r\n          description: id\r\n          type: string\r\n      get:\r\n        displayName: findBankAccountByIdUsingGET\r\n        description: findBankAccountById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABBankAccount\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n      delete:\r\n        displayName: deleteByIdUsingDELETE\r\n        description: deleteById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABboolean\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n  \/branches:\r\n    get:\r\n      displayName: findAllBranchesUsingGET\r\n      description: findAllBranches\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABList\u00ABBranch\u00BB\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    post:\r\n      displayName: addUsingPOST_1\r\n      description: add\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: Branch\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABBranch\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    \/update:\r\n      put:\r\n        displayName: updateUsingPUT_1\r\n        description: update\r\n        body:\r\n          application\/json:\r\n            displayName: request\r\n            description: request\r\n            type: Branch\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABBranch\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n    \/{id}:\r\n      uriParameters:\r\n        id:\r\n          required: true\r\n          displayName: id\r\n          description: id\r\n          type: string\r\n      get:\r\n        displayName: findBranchByIdUsingGET\r\n        description: findBranchById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABBranch\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n      delete:\r\n        displayName: deleteByIdUsingDELETE_1\r\n        description: deleteById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABBranch\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n  \/issues:\r\n    post:\r\n      displayName: addUsingPOST_2\r\n      description: add\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: Issue\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABIssue\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    put:\r\n      displayName: updateUsingPUT_2\r\n      description: update\r\n      body:\r\n        application\/json:\r\n          displayName: dto\r\n          description: dto\r\n          type: Issue\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABIssue\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    \/product\/{projectId}:\r\n      uriParameters:\r\n        projectId:\r\n          required: true\r\n          displayName: projectId\r\n          description: projectId\r\n          type: string\r\n      get:\r\n        displayName: findByProjectIdUsingGET\r\n        description: findByProjectId\r\n        queryParameters:\r\n          page:\r\n            required: false\r\n            default: 0\r\n            example:\r\n              value: 0\r\n            displayName: page\r\n            description: page\r\n            type: integer\r\n            format: int32\r\n          pageSize:\r\n            required: false\r\n            default: 20\r\n            example:\r\n              value: 20\r\n            displayName: pageSize\r\n            description: pageSize\r\n            type: integer\r\n            format: int32\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABList\u00ABIssue\u00BB\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n      \/issue\/{id}:\r\n        uriParameters:\r\n          id:\r\n            required: true\r\n            displayName: id\r\n            description: id\r\n            type: string\r\n        delete:\r\n          displayName: deleteUsingDELETE\r\n          description: delete\r\n          responses:\r\n            200:\r\n              description: OK\r\n              headers:\r\n                Content-Type:\r\n                  default: '*\/*'\r\n                  displayName: Content-Type\r\n                  type: string\r\n              body:\r\n                '*\/*':\r\n                  displayName: response\r\n                  description: OK\r\n                  type: Response\u00ABIssue\u00BB\r\n            401:\r\n              description: Unauthorized\r\n              body: {}\r\n            403:\r\n              description: Forbidden\r\n              body: {}\r\n    \/ui:\r\n      post:\r\n        displayName: addFromUIUsingPOST\r\n        description: addFromUI\r\n        body:\r\n          application\/json:\r\n            displayName: request\r\n            description: request\r\n            type: Issue\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABIssue\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n      put:\r\n        displayName: updateFromUIUsingPUT\r\n        description: updateFromUI\r\n        body:\r\n          application\/json:\r\n            displayName: dto\r\n            description: dto\r\n            type: Issue\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABIssue\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n    \/{id}:\r\n      uriParameters:\r\n        id:\r\n          required: true\r\n          displayName: id\r\n          description: id\r\n          type: string\r\n      get:\r\n        displayName: findByIdUsingGET\r\n        description: findById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABIssue\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n  \/orgs:\r\n    get:\r\n      displayName: findAllUsingGET\r\n      description: findAll\r\n      queryParameters:\r\n        page:\r\n          required: false\r\n          default: 0\r\n          example:\r\n            value: 0\r\n          displayName: page\r\n          description: page\r\n          type: integer\r\n          format: int32\r\n        pageSize:\r\n          required: false\r\n          default: 20\r\n          example:\r\n            value: 20\r\n          displayName: pageSize\r\n          description: pageSize\r\n          type: integer\r\n          format: int32\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABList\u00ABOrg\u00BB\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    post:\r\n      displayName: createUsingPOST\r\n      description: create\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: Org\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABOrg\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    \/allorgs:\r\n      get:\r\n        displayName: findAllOrgsUsingGET\r\n        description: findAllOrgs\r\n        queryParameters:\r\n          page:\r\n            required: false\r\n            default: 0\r\n            example:\r\n              value: 0\r\n            displayName: page\r\n            description: page\r\n            type: integer\r\n            format: int32\r\n          pageSize:\r\n            required: false\r\n            default: 20\r\n            example:\r\n              value: 20\r\n            displayName: pageSize\r\n            description: pageSize\r\n            type: integer\r\n            format: int32\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABList\u00ABOrg\u00BB\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n    \/by-user:\r\n      get:\r\n        displayName: findOrgUsersUsingGET\r\n        description: findOrgUsers\r\n        queryParameters:\r\n          page:\r\n            required: false\r\n            default: 0\r\n            example:\r\n              value: 0\r\n            displayName: page\r\n            description: page\r\n            type: integer\r\n            format: int32\r\n          pageSize:\r\n            required: false\r\n            default: 20\r\n            example:\r\n              value: 20\r\n            displayName: pageSize\r\n            description: pageSize\r\n            type: integer\r\n            format: int32\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABList\u00ABOrgUsers\u00BB\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n    \/find-by-name\/{name}:\r\n      uriParameters:\r\n        name:\r\n          required: true\r\n          displayName: name\r\n          description: name\r\n          type: string\r\n      get:\r\n        displayName: findByNameUsingGET\r\n        description: findByName\r\n        queryParameters:\r\n          page:\r\n            required: false\r\n            default: 0\r\n            example:\r\n              value: 0\r\n            displayName: page\r\n            description: page\r\n            type: integer\r\n            format: int32\r\n          pageSize:\r\n            required: false\r\n            default: 20\r\n            example:\r\n              value: 20\r\n            displayName: pageSize\r\n            description: pageSize\r\n            type: integer\r\n            format: int32\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABOrgUsers\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n    \/login-status:\r\n      get:\r\n        displayName: loginUsingGET\r\n        description: login\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABOrgUsers\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n    \/search:\r\n      get:\r\n        displayName: searchUsingGET\r\n        description: search\r\n        queryParameters:\r\n          keyword:\r\n            required: false\r\n            displayName: keyword\r\n            description: keyword\r\n            type: string\r\n          page:\r\n            required: false\r\n            default: 0\r\n            example:\r\n              value: 0\r\n            displayName: page\r\n            description: page\r\n            type: integer\r\n            format: int32\r\n          pageSize:\r\n            required: false\r\n            default: 20\r\n            example:\r\n              value: 20\r\n            displayName: pageSize\r\n            description: pageSize\r\n            type: integer\r\n            format: int32\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABList\u00ABOrg\u00BB\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n    \/{id}:\r\n      uriParameters:\r\n        id:\r\n          required: true\r\n          displayName: id\r\n          description: id\r\n          type: string\r\n      get:\r\n        displayName: findByIdUsingGET_1\r\n        description: findById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABOrg\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n      put:\r\n        displayName: updateUsingPUT_3\r\n        description: update\r\n        body:\r\n          application\/json:\r\n            displayName: dto\r\n            description: dto\r\n            type: Org\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABOrg\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n      delete:\r\n        displayName: deleteUsingDELETE_1\r\n        description: delete\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABOrg\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n      \/users:\r\n        get:\r\n          displayName: findOrgUsersByIdUsingGET\r\n          description: findOrgUsersById\r\n          queryParameters:\r\n            page:\r\n              required: false\r\n              default: 0\r\n              example:\r\n                value: 0\r\n              displayName: page\r\n              description: page\r\n              type: integer\r\n              format: int32\r\n            pageSize:\r\n              required: false\r\n              default: 20\r\n              example:\r\n                value: 20\r\n              displayName: pageSize\r\n              description: pageSize\r\n              type: integer\r\n              format: int32\r\n          responses:\r\n            200:\r\n              description: OK\r\n              headers:\r\n                Content-Type:\r\n                  default: '*\/*'\r\n                  displayName: Content-Type\r\n                  type: string\r\n              body:\r\n                '*\/*':\r\n                  displayName: response\r\n                  description: OK\r\n                  type: Response\u00ABList\u00ABOrgUsers\u00BB\u00BB\r\n            401:\r\n              description: Unauthorized\r\n              body: {}\r\n            403:\r\n              description: Forbidden\r\n              body: {}\r\n            404:\r\n              description: Not Found\r\n              body: {}\r\n    \/{branchId}:\r\n      uriParameters:\r\n        branchId:\r\n          required: true\r\n          displayName: branchId\r\n          description: branchId\r\n          type: string\r\n      \/branch-user\/{orgUserId}:\r\n        uriParameters:\r\n          orgUserId:\r\n            required: true\r\n            displayName: orgUserId\r\n            description: orgUserId\r\n            type: string\r\n        get:\r\n          displayName: findOrgUserByIdUsingGET\r\n          description: findOrgUserById\r\n          responses:\r\n            200:\r\n              description: OK\r\n              headers:\r\n                Content-Type:\r\n                  default: '*\/*'\r\n                  displayName: Content-Type\r\n                  type: string\r\n              body:\r\n                '*\/*':\r\n                  displayName: response\r\n                  description: OK\r\n                  type: Response\u00ABOrgUsers\u00BB\r\n            401:\r\n              description: Unauthorized\r\n              body: {}\r\n            403:\r\n              description: Forbidden\r\n              body: {}\r\n            404:\r\n              description: Not Found\r\n              body: {}\r\n      \/users:\r\n        \/add-member:\r\n          post:\r\n            displayName: findOrgUsersByIdUsingPOST\r\n            description: findOrgUsersById\r\n            body:\r\n              application\/json:\r\n                displayName: member\r\n                description: member\r\n                type: Member\r\n            responses:\r\n              200:\r\n                description: OK\r\n                headers:\r\n                  Content-Type:\r\n                    default: '*\/*'\r\n                    displayName: Content-Type\r\n                    type: string\r\n                body:\r\n                  '*\/*':\r\n                    displayName: response\r\n                    description: OK\r\n                    type: Response\u00ABboolean\u00BB\r\n              401:\r\n                description: Unauthorized\r\n                body: {}\r\n              403:\r\n                description: Forbidden\r\n                body: {}\r\n              404:\r\n                description: Not Found\r\n                body: {}\r\n        \/{userId}:\r\n          uriParameters:\r\n            userId:\r\n              required: true\r\n              displayName: userId\r\n              description: userId\r\n              type: string\r\n          put:\r\n            displayName: updateOrgUserUsingPUT\r\n            description: updateOrgUser\r\n            body:\r\n              application\/json:\r\n                displayName: request\r\n                description: request\r\n                type: OrgUsers\r\n            responses:\r\n              200:\r\n                description: OK\r\n                headers:\r\n                  Content-Type:\r\n                    default: '*\/*'\r\n                    displayName: Content-Type\r\n                    type: string\r\n                body:\r\n                  '*\/*':\r\n                    displayName: response\r\n                    description: OK\r\n                    type: Response\u00ABboolean\u00BB\r\n              401:\r\n                description: Unauthorized\r\n                body: {}\r\n              403:\r\n                description: Forbidden\r\n                body: {}\r\n              404:\r\n                description: Not Found\r\n                body: {}\r\n          \/reset-password:\r\n            post:\r\n              displayName: resetPasswordUsingPOST\r\n              description: resetPassword\r\n              body:\r\n                application\/json:\r\n                  displayName: member\r\n                  description: member\r\n                  type: Member\r\n              responses:\r\n                200:\r\n                  description: OK\r\n                  headers:\r\n                    Content-Type:\r\n                      default: '*\/*'\r\n                      displayName: Content-Type\r\n                      type: string\r\n                  body:\r\n                    '*\/*':\r\n                      displayName: response\r\n                      description: OK\r\n                      type: Response\u00ABboolean\u00BB\r\n                401:\r\n                  description: Unauthorized\r\n                  body: {}\r\n                403:\r\n                  description: Forbidden\r\n                  body: {}\r\n                404:\r\n                  description: Not Found\r\n                  body: {}\r\n  \/primary-transaction:\r\n    get:\r\n      displayName: findAllPrimaryTransactionUsingGET\r\n      description: findAllPrimaryTransaction\r\n      queryParameters:\r\n        pageSize:\r\n          required: false\r\n          default: 20\r\n          example:\r\n            value: 20\r\n          displayName: pageSize\r\n          description: pageSize\r\n          type: integer\r\n          format: int32\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABList\u00ABPrimaryTransaction\u00BB\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    post:\r\n      displayName: addUsingPOST_4\r\n      description: add\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: PrimaryTransaction\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABPrimaryTransaction\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    put:\r\n      displayName: updateUsingPUT_5\r\n      description: update\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: PrimaryTransaction\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABPrimaryTransaction\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    \/{id}:\r\n      uriParameters:\r\n        id:\r\n          required: true\r\n          displayName: id\r\n          description: id\r\n          type: string\r\n      get:\r\n        displayName: findPrimaryTransactionByIdUsingGET\r\n        description: findPrimaryTransactionById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABPrimaryTransaction\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n      delete:\r\n        displayName: deleteByIdUsingDELETE_3\r\n        description: deleteById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABPrimaryTransaction\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n  \/products:\r\n    get:\r\n      displayName: findAllUsingGET_1\r\n      description: findAll\r\n      queryParameters:\r\n        page:\r\n          required: false\r\n          default: 0\r\n          example:\r\n            value: 0\r\n          displayName: page\r\n          description: page\r\n          type: integer\r\n          format: int32\r\n        pageSize:\r\n          required: false\r\n          default: 20\r\n          example:\r\n            value: 20\r\n          displayName: pageSize\r\n          description: pageSize\r\n          type: integer\r\n          format: int32\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABList\u00ABProject\u00BB\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    post:\r\n      displayName: addUsingPOST_5\r\n      description: add\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: Project\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABProject\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    put:\r\n      displayName: updateUsingPUT_6\r\n      description: update\r\n      body:\r\n        application\/json:\r\n          displayName: dto\r\n          description: dto\r\n          type: Project\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABProject\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    \/{id}:\r\n      uriParameters:\r\n        id:\r\n          required: true\r\n          displayName: id\r\n          description: id\r\n          type: string\r\n      get:\r\n        displayName: findByIdUsingGET_2\r\n        description: findById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABProject\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n      delete:\r\n        displayName: deleteUsingDELETE_2\r\n        description: delete\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABProject\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n  \/recepient:\r\n    get:\r\n      displayName: findAllRecepientsUsingGET\r\n      description: findAllRecepients\r\n      queryParameters:\r\n        pageSize:\r\n          required: false\r\n          default: 20\r\n          example:\r\n            value: 20\r\n          displayName: pageSize\r\n          description: pageSize\r\n          type: integer\r\n          format: int32\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABList\u00ABRecepient\u00BB\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    post:\r\n      displayName: addRecepientUsingPOST\r\n      description: addRecepient\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: Recepient\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABRecepient\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    put:\r\n      displayName: updateUsingPUT_7\r\n      description: update\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: Recepient\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABRecepient\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    \/{id}:\r\n      uriParameters:\r\n        id:\r\n          required: true\r\n          displayName: id\r\n          description: id\r\n          type: string\r\n      get:\r\n        displayName: findRecepientByIdUsingGET\r\n        description: findRecepientById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABRecepient\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n      delete:\r\n        displayName: deleteByIdUsingDELETE_4\r\n        description: deleteById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABRecepient\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n  \/savings-account\/savings-account:\r\n    get:\r\n      displayName: findAllSavingsAccountUsingGET\r\n      description: findAllSavingsAccount\r\n      queryParameters:\r\n        pageSize:\r\n          required: false\r\n          default: 20\r\n          example:\r\n            value: 20\r\n          displayName: pageSize\r\n          description: pageSize\r\n          type: integer\r\n          format: int32\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABList\u00ABSavingsAccount\u00BB\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    post:\r\n      displayName: addUsingPOST_6\r\n      description: add\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: SavingsAccount\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABSavingsAccount\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    put:\r\n      displayName: updateUsingPUT_8\r\n      description: update\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: SavingsAccount\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABSavingsAccount\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    \/{id}:\r\n      uriParameters:\r\n        id:\r\n          required: true\r\n          displayName: id\r\n          description: id\r\n          type: string\r\n      get:\r\n        displayName: findSavingsAccountByIdUsingGET\r\n        description: findSavingsAccountById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABSavingsAccount\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n      delete:\r\n        displayName: deleteByIdUsingDELETE_5\r\n        description: deleteById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABSavingsAccount\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n  \/savings-transaction:\r\n    get:\r\n      displayName: findAllSavingsTransactionUsingGET\r\n      description: findAllSavingsTransaction\r\n      queryParameters:\r\n        pageSize:\r\n          required: false\r\n          default: 20\r\n          example:\r\n            value: 20\r\n          displayName: pageSize\r\n          description: pageSize\r\n          type: integer\r\n          format: int32\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABList\u00ABSavingsTransaction\u00BB\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    post:\r\n      displayName: addUsingPOST_7\r\n      description: add\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: SavingsTransaction\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABSavingsTransaction\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    put:\r\n      displayName: updateUsingPUT_9\r\n      description: update\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: SavingsTransaction\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABSavingsTransaction\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    \/{id}:\r\n      uriParameters:\r\n        id:\r\n          required: true\r\n          displayName: id\r\n          description: id\r\n          type: string\r\n      get:\r\n        displayName: findSavingsTransactionByIdUsingGET\r\n        description: findSavingsTransactionById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABSavingsTransaction\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n      delete:\r\n        displayName: deleteByIdUsingDELETE_6\r\n        description: deleteById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABSavingsTransaction\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n  \/transfers:\r\n    get:\r\n      displayName: findAllTransfersUsingGET\r\n      description: findAllTransfers\r\n      queryParameters:\r\n        pageSize:\r\n          required: false\r\n          default: 20\r\n          example:\r\n            value: 20\r\n          displayName: pageSize\r\n          description: pageSize\r\n          type: integer\r\n          format: int32\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABList\u00ABTransfers\u00BB\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    post:\r\n      displayName: addUsingPOST_8\r\n      description: add\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: Transfers\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABTransfers\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    put:\r\n      displayName: updateUsingPUT_10\r\n      description: update\r\n      body:\r\n        application\/json:\r\n          displayName: request\r\n          description: request\r\n          type: Transfers\r\n      responses:\r\n        200:\r\n          description: OK\r\n          headers:\r\n            Content-Type:\r\n              default: '*\/*'\r\n              displayName: Content-Type\r\n              type: string\r\n          body:\r\n            '*\/*':\r\n              displayName: response\r\n              description: OK\r\n              type: Response\u00ABTransfers\u00BB\r\n        401:\r\n          description: Unauthorized\r\n          body: {}\r\n        403:\r\n          description: Forbidden\r\n          body: {}\r\n        404:\r\n          description: Not Found\r\n          body: {}\r\n    \/{id}:\r\n      uriParameters:\r\n        id:\r\n          required: true\r\n          displayName: id\r\n          description: id\r\n          type: string\r\n      get:\r\n        displayName: findTransfersByIdUsingGET\r\n        description: findTransfersById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABTransfers\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n      delete:\r\n        displayName: deleteByIdUsingDELETE_7\r\n        description: deleteById\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABTransfers\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n  \/primary-account:\r\n    \/deposit-amount\/{id}:\r\n      uriParameters:\r\n        id:\r\n          required: true\r\n          displayName: id\r\n          description: id\r\n          type: string\r\n      put:\r\n        displayName: depositUsingPUT_1\r\n        description: deposit\r\n        body:\r\n          application\/json:\r\n            displayName: request\r\n            description: request\r\n            type: PrimaryAccount\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABboolean\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n    \/primary-account:\r\n      get:\r\n        displayName: findAllPrimaryAccountUsingGET\r\n        description: findAllPrimaryAccount\r\n        queryParameters:\r\n          pageSize:\r\n            required: false\r\n            default: 20\r\n            example:\r\n              value: 20\r\n            displayName: pageSize\r\n            description: pageSize\r\n            type: integer\r\n            format: int32\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABList\u00ABPrimaryAccount\u00BB\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n      post:\r\n        displayName: addUsingPOST_3\r\n        description: add\r\n        body:\r\n          application\/json:\r\n            displayName: request\r\n            description: request\r\n            type: PrimaryAccount\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABPrimaryAccount\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n      put:\r\n        displayName: updateUsingPUT_4\r\n        description: update\r\n        body:\r\n          application\/json:\r\n            displayName: request\r\n            description: request\r\n            type: PrimaryAccount\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABPrimaryAccount\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n      \/{id}:\r\n        uriParameters:\r\n          id:\r\n            required: true\r\n            displayName: id\r\n            description: id\r\n            type: string\r\n        get:\r\n          displayName: findPrimaryAccountByIdUsingGET\r\n          description: findPrimaryAccountById\r\n          responses:\r\n            200:\r\n              description: OK\r\n              headers:\r\n                Content-Type:\r\n                  default: '*\/*'\r\n                  displayName: Content-Type\r\n                  type: string\r\n              body:\r\n                '*\/*':\r\n                  displayName: response\r\n                  description: OK\r\n                  type: Response\u00ABPrimaryAccount\u00BB\r\n            401:\r\n              description: Unauthorized\r\n              body: {}\r\n            403:\r\n              description: Forbidden\r\n              body: {}\r\n            404:\r\n              description: Not Found\r\n              body: {}\r\n        delete:\r\n          displayName: deleteByIdUsingDELETE_2\r\n          description: deleteById\r\n          responses:\r\n            200:\r\n              description: OK\r\n              headers:\r\n                Content-Type:\r\n                  default: '*\/*'\r\n                  displayName: Content-Type\r\n                  type: string\r\n              body:\r\n                '*\/*':\r\n                  displayName: response\r\n                  description: OK\r\n                  type: Response\u00ABboolean\u00BB\r\n            401:\r\n              description: Unauthorized\r\n              body: {}\r\n            403:\r\n              description: Forbidden\r\n              body: {}\r\n    \/withdraw-amount\/{id}:\r\n      uriParameters:\r\n        id:\r\n          required: true\r\n          displayName: id\r\n          description: id\r\n          type: string\r\n      put:\r\n        displayName: withdrawUsingPUT_1\r\n        description: withdraw\r\n        body:\r\n          application\/json:\r\n            displayName: request\r\n            description: request\r\n            type: PrimaryAccount\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABboolean\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n  \/users:\r\n    \/enterprise-sign-up:\r\n      post:\r\n        displayName: enterpriseSignUpUsingPOST\r\n        description: enterpriseSignUp\r\n        body:\r\n          application\/json:\r\n            displayName: users\r\n            description: users\r\n            type: Users\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABboolean\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n    \/personal-sign-up:\r\n      post:\r\n        displayName: personalSignUpUsingPOST\r\n        description: personalSignUp\r\n        body:\r\n          application\/json:\r\n            displayName: users\r\n            description: users\r\n            type: Users\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABboolean\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n    \/status:\r\n      get:\r\n        displayName: loginUsingGET_1\r\n        description: login\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABUsers\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n    \/team-sign-up:\r\n      post:\r\n        displayName: teamSignUpUsingPOST\r\n        description: teamSignUp\r\n        body:\r\n          application\/json:\r\n            displayName: users\r\n            description: users\r\n            type: Users\r\n        responses:\r\n          200:\r\n            description: OK\r\n            headers:\r\n              Content-Type:\r\n                default: '*\/*'\r\n                displayName: Content-Type\r\n                type: string\r\n            body:\r\n              '*\/*':\r\n                displayName: response\r\n                description: OK\r\n                type: Response\u00ABboolean\u00BB\r\n          401:\r\n            description: Unauthorized\r\n            body: {}\r\n          403:\r\n            description: Forbidden\r\n            body: {}\r\n          404:\r\n            description: Not Found\r\n            body: {}\r\n"
}

_____________________________________________________________________________________________________________________________________________________________________
_____________________________________________________________________________________________________________________________________________________________________

{
    "data": {
        "openapi": "3.0.0",
        "info": {
            "title": "Online Banking REST API",
            "version": "V1"
        },
        "servers": [
            {
                "url": "http://95.217.118.53:8080/"
            }
        ],
        "paths": {
            "/api/v1/bank-account": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«List«BankAccount»»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findAllBankAccount",
                    "operationId": "findAllBankAccountUsingGET",
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "pageSize",
                            "schema": {
                                "default": 20,
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    ]
                },
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«BankAccount»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "add",
                    "operationId": "addUsingPOST",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/BankAccount"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«BankAccount»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "update",
                    "operationId": "updateUsingPUT",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/BankAccount"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/bank-account/deposit-amount": {
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«boolean»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "deposit",
                    "operationId": "depositUsingPUT",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/BankAccount"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/bank-account/withdraw-amount": {
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«boolean»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "withdraw",
                    "operationId": "withdrawUsingPUT",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/BankAccount"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/bank-account/{id}": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«BankAccount»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findBankAccountById",
                    "operationId": "findBankAccountByIdUsingGET"
                },
                "delete": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«boolean»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        }
                    },
                    "description": "deleteById",
                    "operationId": "deleteByIdUsingDELETE"
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "id"
                    }
                ]
            },
            "/api/v1/branches": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«List«Branch»»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findAllBranches",
                    "operationId": "findAllBranchesUsingGET"
                },
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Branch»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "add",
                    "operationId": "addUsingPOST_1",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/Branch"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/branches/update": {
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Branch»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "update",
                    "operationId": "updateUsingPUT_1",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/Branch"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/branches/{id}": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Branch»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findBranchById",
                    "operationId": "findBranchByIdUsingGET"
                },
                "delete": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Branch»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        }
                    },
                    "description": "deleteById",
                    "operationId": "deleteByIdUsingDELETE_1"
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "id"
                    }
                ]
            },
            "/api/v1/issues": {
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Issue»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "add",
                    "operationId": "addUsingPOST_2",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Issue»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "update",
                    "operationId": "updateUsingPUT_2",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "dto",
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/issues/product/{projectId}": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«List«Issue»»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findByProjectId",
                    "operationId": "findByProjectIdUsingGET",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "page",
                            "schema": {
                                "default": 0,
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "pageSize",
                            "schema": {
                                "default": 20,
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    ]
                },
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "projectId"
                    }
                ]
            },
            "/api/v1/issues/product/{projectId}/issue/{id}": {
                "delete": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Issue»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        }
                    },
                    "description": "delete",
                    "operationId": "deleteUsingDELETE"
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "id"
                    }
                ]
            },
            "/api/v1/issues/ui": {
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Issue»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "addFromUI",
                    "operationId": "addFromUIUsingPOST",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Issue»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "updateFromUI",
                    "operationId": "updateFromUIUsingPUT",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "dto",
                                    "$ref": "#/components/schemas/Issue"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/issues/{id}": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Issue»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findById",
                    "operationId": "findByIdUsingGET"
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "id"
                    }
                ]
            },
            "/api/v1/orgs": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«List«Org»»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findAll",
                    "operationId": "findAllUsingGET",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "page",
                            "schema": {
                                "default": 0,
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "pageSize",
                            "schema": {
                                "default": 20,
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    ]
                },
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Org»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "create",
                    "operationId": "createUsingPOST",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/Org"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/orgs/allorgs": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«List«Org»»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findAllOrgs",
                    "operationId": "findAllOrgsUsingGET",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "page",
                            "schema": {
                                "default": 0,
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "pageSize",
                            "schema": {
                                "default": 20,
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    ]
                }
            },
            "/api/v1/orgs/by-user": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«List«OrgUsers»»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findOrgUsers",
                    "operationId": "findOrgUsersUsingGET",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "page",
                            "schema": {
                                "default": 0,
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "pageSize",
                            "schema": {
                                "default": 20,
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    ]
                }
            },
            "/api/v1/orgs/find-by-name/{name}": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«OrgUsers»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findByName",
                    "operationId": "findByNameUsingGET",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "page",
                            "schema": {
                                "default": 0,
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "pageSize",
                            "schema": {
                                "default": 20,
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    ]
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "name"
                    }
                ]
            },
            "/api/v1/orgs/login-status": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«OrgUsers»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "login",
                    "operationId": "loginUsingGET"
                }
            },
            "/api/v1/orgs/search": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«List«Org»»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "search",
                    "operationId": "searchUsingGET",
                    "parameters": [
                        {
                            "name": "keyword",
                            "in": "query",
                            "description": "keyword",
                            "schema": {
                                "type": "string"
                            }
                        },
                        {
                            "name": "page",
                            "in": "query",
                            "description": "page",
                            "schema": {
                                "default": 0,
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "pageSize",
                            "schema": {
                                "default": 20,
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    ]
                }
            },
            "/api/v1/orgs/{id}": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Org»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findById",
                    "operationId": "findByIdUsingGET_1"
                },
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Org»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "update",
                    "operationId": "updateUsingPUT_3",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "dto",
                                    "$ref": "#/components/schemas/Org"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "delete": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Org»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        }
                    },
                    "description": "delete",
                    "operationId": "deleteUsingDELETE_1"
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "id"
                    }
                ]
            },
            "/api/v1/orgs/{id}/users": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«List«OrgUsers»»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findOrgUsersById",
                    "operationId": "findOrgUsersByIdUsingGET",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "page",
                            "schema": {
                                "default": 0,
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "pageSize",
                            "schema": {
                                "default": 20,
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    ]
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "id"
                    }
                ]
            },
            "/api/v1/orgs/{branchId}/branch-user/{orgUserId}": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«OrgUsers»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findOrgUserById",
                    "operationId": "findOrgUserByIdUsingGET"
                },
                "parameters": [
                    {
                        "name": "orgUserId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "orgUserId"
                    },
                    {
                        "name": "branchId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "branchId"
                    }
                ]
            },
            "/api/v1/orgs/{branchId}/users/add-member": {
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«boolean»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findOrgUsersById",
                    "operationId": "findOrgUsersByIdUsingPOST",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "member",
                                    "$ref": "#/components/schemas/Member"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "parameters": [
                    {
                        "name": "branchId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "branchId"
                    }
                ]
            },
            "/api/v1/orgs/{branchId}/users/{userId}": {
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«boolean»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "updateOrgUser",
                    "operationId": "updateOrgUserUsingPUT",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/OrgUsers"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "userId"
                    },
                    {
                        "name": "branchId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "branchId"
                    }
                ]
            },
            "/api/v1/orgs/{branchId}/users/{userId}/reset-password": {
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«boolean»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "resetPassword",
                    "operationId": "resetPasswordUsingPOST",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "member",
                                    "$ref": "#/components/schemas/Member"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "userId"
                    },
                    {
                        "name": "branchId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "branchId"
                    }
                ]
            },
            "/api/v1/primary-transaction": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«List«PrimaryTransaction»»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findAllPrimaryTransaction",
                    "operationId": "findAllPrimaryTransactionUsingGET",
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "pageSize",
                            "schema": {
                                "default": 20,
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    ]
                },
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«PrimaryTransaction»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "add",
                    "operationId": "addUsingPOST_4",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/PrimaryTransaction"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«PrimaryTransaction»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "update",
                    "operationId": "updateUsingPUT_5",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/PrimaryTransaction"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/primary-transaction/{id}": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«PrimaryTransaction»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findPrimaryTransactionById",
                    "operationId": "findPrimaryTransactionByIdUsingGET"
                },
                "delete": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«PrimaryTransaction»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        }
                    },
                    "description": "deleteById",
                    "operationId": "deleteByIdUsingDELETE_3"
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "id"
                    }
                ]
            },
            "/api/v1/products": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«List«Project»»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findAll",
                    "operationId": "findAllUsingGET_1",
                    "parameters": [
                        {
                            "name": "page",
                            "in": "query",
                            "description": "page",
                            "schema": {
                                "default": 0,
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "pageSize",
                            "schema": {
                                "default": 20,
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    ]
                },
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Project»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "add",
                    "operationId": "addUsingPOST_5",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Project»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "update",
                    "operationId": "updateUsingPUT_6",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "dto",
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/products/{id}": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Project»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findById",
                    "operationId": "findByIdUsingGET_2"
                },
                "delete": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Project»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        }
                    },
                    "description": "delete",
                    "operationId": "deleteUsingDELETE_2"
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "id"
                    }
                ]
            },
            "/api/v1/recepient": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«List«Recepient»»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findAllRecepients",
                    "operationId": "findAllRecepientsUsingGET",
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "pageSize",
                            "schema": {
                                "default": 20,
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    ]
                },
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Recepient»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "addRecepient",
                    "operationId": "addRecepientUsingPOST",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/Recepient"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Recepient»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "update",
                    "operationId": "updateUsingPUT_7",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/Recepient"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/recepient/{id}": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Recepient»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findRecepientById",
                    "operationId": "findRecepientByIdUsingGET"
                },
                "delete": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Recepient»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        }
                    },
                    "description": "deleteById",
                    "operationId": "deleteByIdUsingDELETE_4"
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "id"
                    }
                ]
            },
            "/api/v1/savings-account/savings-account": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«List«SavingsAccount»»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findAllSavingsAccount",
                    "operationId": "findAllSavingsAccountUsingGET",
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "pageSize",
                            "schema": {
                                "default": 20,
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    ]
                },
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«SavingsAccount»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "add",
                    "operationId": "addUsingPOST_6",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/SavingsAccount"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«SavingsAccount»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "update",
                    "operationId": "updateUsingPUT_8",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/SavingsAccount"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/savings-account/savings-account/{id}": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«SavingsAccount»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findSavingsAccountById",
                    "operationId": "findSavingsAccountByIdUsingGET"
                },
                "delete": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«SavingsAccount»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        }
                    },
                    "description": "deleteById",
                    "operationId": "deleteByIdUsingDELETE_5"
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "id"
                    }
                ]
            },
            "/api/v1/savings-transaction": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«List«SavingsTransaction»»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findAllSavingsTransaction",
                    "operationId": "findAllSavingsTransactionUsingGET",
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "pageSize",
                            "schema": {
                                "default": 20,
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    ]
                },
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«SavingsTransaction»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "add",
                    "operationId": "addUsingPOST_7",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/SavingsTransaction"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«SavingsTransaction»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "update",
                    "operationId": "updateUsingPUT_9",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/SavingsTransaction"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/savings-transaction/{id}": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«SavingsTransaction»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findSavingsTransactionById",
                    "operationId": "findSavingsTransactionByIdUsingGET"
                },
                "delete": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«SavingsTransaction»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        }
                    },
                    "description": "deleteById",
                    "operationId": "deleteByIdUsingDELETE_6"
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "id"
                    }
                ]
            },
            "/api/v1/transfers": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«List«Transfers»»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findAllTransfers",
                    "operationId": "findAllTransfersUsingGET",
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "pageSize",
                            "schema": {
                                "default": 20,
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    ]
                },
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Transfers»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "add",
                    "operationId": "addUsingPOST_8",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/Transfers"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Transfers»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "update",
                    "operationId": "updateUsingPUT_10",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/Transfers"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/transfers/{id}": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Transfers»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findTransfersById",
                    "operationId": "findTransfersByIdUsingGET"
                },
                "delete": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Transfers»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        }
                    },
                    "description": "deleteById",
                    "operationId": "deleteByIdUsingDELETE_7"
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "id"
                    }
                ]
            },
            "/api/v1/primary-account/deposit-amount/{id}": {
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«boolean»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "deposit",
                    "operationId": "depositUsingPUT_1",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/PrimaryAccount"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "id"
                    }
                ]
            },
            "/api/v1/primary-account/primary-account": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«List«PrimaryAccount»»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findAllPrimaryAccount",
                    "operationId": "findAllPrimaryAccountUsingGET",
                    "parameters": [
                        {
                            "name": "pageSize",
                            "in": "query",
                            "description": "pageSize",
                            "schema": {
                                "default": 20,
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    ]
                },
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«PrimaryAccount»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "add",
                    "operationId": "addUsingPOST_3",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/PrimaryAccount"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«PrimaryAccount»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "update",
                    "operationId": "updateUsingPUT_4",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/PrimaryAccount"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/primary-account/primary-account/{id}": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«PrimaryAccount»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "findPrimaryAccountById",
                    "operationId": "findPrimaryAccountByIdUsingGET"
                },
                "delete": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«boolean»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        }
                    },
                    "description": "deleteById",
                    "operationId": "deleteByIdUsingDELETE_2"
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "id"
                    }
                ]
            },
            "/api/v1/primary-account/withdraw-amount/{id}": {
                "put": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«boolean»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "withdraw",
                    "operationId": "withdrawUsingPUT_1",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "request",
                                    "$ref": "#/components/schemas/PrimaryAccount"
                                }
                            }
                        },
                        "required": true
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "id"
                    }
                ]
            },
            "/api/v1/users/enterprise-sign-up": {
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«boolean»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "enterpriseSignUp",
                    "operationId": "enterpriseSignUpUsingPOST",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "users",
                                    "$ref": "#/components/schemas/Users"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/users/personal-sign-up": {
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«boolean»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "personalSignUp",
                    "operationId": "personalSignUpUsingPOST",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "users",
                                    "$ref": "#/components/schemas/Users"
                                }
                            }
                        },
                        "required": true
                    }
                }
            },
            "/api/v1/users/status": {
                "get": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«Users»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "login",
                    "operationId": "loginUsingGET_1"
                }
            },
            "/api/v1/users/team-sign-up": {
                "post": {
                    "responses": {
                        "200": {
                            "description": "OK",
                            "headers": {
                                "Content-Type": {
                                    "default": "*/*",
                                    "displayName": "Content-Type",
                                    "schema": {
                                        "type": "string"
                                    }
                                }
                            },
                            "content": {
                                "*/*": {
                                    "schema": {
                                        "$ref": "#/components/schemas/Response«boolean»"
                                    }
                                }
                            }
                        },
                        "401": {
                            "description": "Unauthorized"
                        },
                        "403": {
                            "description": "Forbidden"
                        },
                        "404": {
                            "description": "Not Found"
                        }
                    },
                    "description": "teamSignUp",
                    "operationId": "teamSignUpUsingPOST",
                    "requestBody": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "users",
                                    "$ref": "#/components/schemas/Users"
                                }
                            }
                        },
                        "required": true
                    }
                }
            }
        },
        "components": {
            "schemas": {
                "BankAccount": {
                    "title": "BankAccount",
                    "type": "object",
                    "properties": {
                        "accountBalance": {
                            "title": "accountBalance",
                            "format": "int64",
                            "type": "integer"
                        },
                        "accountNumber": {
                            "title": "accountNumber",
                            "format": "int64",
                            "type": "integer"
                        },
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "title": "user",
                            "$ref": "#/components/schemas/NameDto"
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "Branch": {
                    "title": "Branch",
                    "type": "object",
                    "properties": {
                        "access": {
                            "title": "access",
                            "type": "string"
                        },
                        "atmAtBranch": {
                            "title": "atmAtBranch",
                            "type": "string"
                        },
                        "branchMediatedServiceName": {
                            "title": "branchMediatedServiceName",
                            "type": "string"
                        },
                        "branchName": {
                            "title": "branchName",
                            "type": "string"
                        },
                        "branchType": {
                            "title": "branchType",
                            "type": "string"
                        },
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "customerSegment": {
                            "title": "customerSegment",
                            "type": "string"
                        },
                        "faxNumber": {
                            "title": "faxNumber",
                            "type": "string"
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "Issue": {
                    "title": "Issue",
                    "type": "object",
                    "properties": {
                        "assertions": {
                            "title": "assertions",
                            "type": "string"
                        },
                        "assignedTo": {
                            "title": "assignedTo",
                            "type": "string"
                        },
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": {
                            "title": "description",
                            "type": "string"
                        },
                        "endpoint": {
                            "title": "endpoint",
                            "type": "string"
                        },
                        "env": {
                            "title": "env",
                            "type": "string"
                        },
                        "failedAssertions": {
                            "title": "failedAssertions",
                            "type": "string"
                        },
                        "headers": {
                            "title": "headers",
                            "type": "array",
                            "items": {
                                "title": "items",
                                "type": "string"
                            }
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "issueName": {
                            "title": "issueName",
                            "type": "string"
                        },
                        "issueStatus": {
                            "title": "issueStatus",
                            "enum": [
                                "OPEN",
                                "CLOSED"
                            ],
                            "type": "string"
                        },
                        "issueType": {
                            "title": "issueType",
                            "enum": [
                                "MANUAL",
                                "AUTOMATIC"
                            ],
                            "type": "string"
                        },
                        "method": {
                            "title": "method",
                            "enum": [
                                "GET",
                                "HEAD",
                                "POST",
                                "PUT",
                                "PATCH",
                                "DELETE",
                                "OPTIONS",
                                "TRACE"
                            ],
                            "type": "string"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "project": {
                            "title": "project",
                            "$ref": "#/components/schemas/Project"
                        },
                        "requestBody": {
                            "title": "requestBody",
                            "type": "string"
                        },
                        "responseBody": {
                            "title": "responseBody",
                            "type": "string"
                        },
                        "responseHeaders": {
                            "title": "responseHeaders",
                            "type": "string"
                        },
                        "result": {
                            "title": "result",
                            "type": "string"
                        },
                        "statusCode": {
                            "title": "statusCode",
                            "type": "string"
                        },
                        "tags": {
                            "title": "tags",
                            "type": "array",
                            "items": {
                                "title": "items",
                                "type": "string"
                            }
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "Member": {
                    "title": "Member",
                    "type": "object",
                    "properties": {
                        "confirmPassword": {
                            "title": "confirmPassword",
                            "type": "string"
                        },
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "email": {
                            "title": "email",
                            "type": "string"
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "name": {
                            "title": "name",
                            "type": "string"
                        },
                        "orgId": {
                            "title": "orgId",
                            "type": "string"
                        },
                        "orgRole": {
                            "title": "orgRole",
                            "enum": [
                                "READ",
                                "WRITE",
                                "ADMIN",
                                "USER",
                                "PROJECT_MANAGER",
                                "ENTERPRISE_ADMIN",
                                "BANK_ACCOUNTANT",
                                "BANK_MANAGER"
                            ],
                            "type": "string"
                        },
                        "password": {
                            "title": "password",
                            "type": "string"
                        },
                        "username": {
                            "title": "username",
                            "type": "string"
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "Message": {
                    "title": "Message",
                    "type": "object",
                    "properties": {
                        "key": {
                            "title": "key",
                            "type": "string"
                        },
                        "type": {
                            "title": "type",
                            "enum": [
                                "INFO",
                                "ERROR",
                                "WARNING"
                            ],
                            "type": "string"
                        },
                        "value": {
                            "title": "value",
                            "type": "string"
                        }
                    }
                },
                "NameDto": {
                    "title": "NameDto",
                    "type": "object",
                    "properties": {
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "name": {
                            "title": "name",
                            "type": "string"
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "Org": {
                    "title": "Org",
                    "type": "object",
                    "properties": {
                        "billingEmail": {
                            "title": "billingEmail",
                            "type": "string"
                        },
                        "company": {
                            "title": "company",
                            "type": "string"
                        },
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": {
                            "title": "description",
                            "type": "string"
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "location": {
                            "title": "location",
                            "type": "string"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "name": {
                            "title": "name",
                            "type": "string"
                        },
                        "orgPlan": {
                            "title": "orgPlan",
                            "enum": [
                                "FREE",
                                "PRO",
                                "TEAM",
                                "BASIC",
                                "BUSINESS",
                                "ENTERPRISE",
                                "PAY_AS_YOU_GO"
                            ],
                            "type": "string"
                        },
                        "orgType": {
                            "title": "orgType",
                            "enum": [
                                "PERSONAL",
                                "TEAM",
                                "ENTERPRISE"
                            ],
                            "type": "string"
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "OrgUsers": {
                    "title": "OrgUsers",
                    "type": "object",
                    "properties": {
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "org": {
                            "title": "org",
                            "$ref": "#/components/schemas/NameDto"
                        },
                        "orgRole": {
                            "title": "orgRole",
                            "enum": [
                                "READ",
                                "WRITE",
                                "ADMIN",
                                "USER",
                                "PROJECT_MANAGER",
                                "ENTERPRISE_ADMIN",
                                "BANK_ACCOUNTANT",
                                "BANK_MANAGER"
                            ],
                            "type": "string"
                        },
                        "status": {
                            "title": "status",
                            "enum": [
                                "INVITED",
                                "ACTIVE",
                                "INACTIVE",
                                "DECLINED",
                                "REMOVED"
                            ],
                            "type": "string"
                        },
                        "users": {
                            "title": "users",
                            "$ref": "#/components/schemas/UserMinimalDto"
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "PrimaryAccount": {
                    "title": "PrimaryAccount",
                    "type": "object",
                    "properties": {
                        "accountBalance": {
                            "title": "accountBalance",
                            "format": "int64",
                            "type": "integer"
                        },
                        "accountNumber": {
                            "title": "accountNumber",
                            "format": "int64",
                            "type": "integer"
                        },
                        "accountType": {
                            "title": "accountType",
                            "enum": [
                                "SAVING",
                                "CURRENT",
                                "CREDIT"
                            ],
                            "type": "string"
                        },
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "PrimaryTransaction": {
                    "title": "PrimaryTransaction",
                    "type": "object",
                    "properties": {
                        "amount": {
                            "title": "amount",
                            "format": "double",
                            "type": "number"
                        },
                        "availableBalance": {
                            "title": "availableBalance",
                            "format": "double",
                            "type": "number"
                        },
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": {
                            "title": "description",
                            "type": "string"
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "status": {
                            "title": "status",
                            "type": "string"
                        },
                        "type": {
                            "title": "type",
                            "type": "string"
                        },
                        "user": {
                            "title": "user",
                            "$ref": "#/components/schemas/NameDto"
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "Project": {
                    "title": "Project",
                    "type": "object",
                    "properties": {
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": {
                            "title": "description",
                            "type": "string"
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "name": {
                            "title": "name",
                            "type": "string"
                        },
                        "org": {
                            "title": "org",
                            "$ref": "#/components/schemas/NameDto"
                        },
                        "refId": {
                            "title": "refId",
                            "type": "string"
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "Recepient": {
                    "title": "Recepient",
                    "type": "object",
                    "properties": {
                        "accountNumber": {
                            "title": "accountNumber",
                            "type": "string"
                        },
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": {
                            "title": "description",
                            "type": "string"
                        },
                        "email": {
                            "title": "email",
                            "type": "string"
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "name": {
                            "title": "name",
                            "type": "string"
                        },
                        "phone": {
                            "title": "phone",
                            "type": "string"
                        },
                        "user": {
                            "title": "user",
                            "$ref": "#/components/schemas/NameDto"
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "Response_BankAccount_": {
                    "title": "Response«BankAccount»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "$ref": "#/components/schemas/BankAccount"
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_Branch_": {
                    "title": "Response«Branch»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "$ref": "#/components/schemas/Branch"
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_Issue_": {
                    "title": "Response«Issue»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "$ref": "#/components/schemas/Issue"
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_List_BankAccount_": {
                    "title": "Response«List«BankAccount»»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/BankAccount"
                            }
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_List_Branch_": {
                    "title": "Response«List«Branch»»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Branch"
                            }
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_List_Issue_": {
                    "title": "Response«List«Issue»»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Issue"
                            }
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_List_OrgUsers_": {
                    "title": "Response«List«OrgUsers»»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/OrgUsers"
                            }
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_List_Org_": {
                    "title": "Response«List«Org»»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Org"
                            }
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_List_PrimaryAccount_": {
                    "title": "Response«List«PrimaryAccount»»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/PrimaryAccount"
                            }
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_List_PrimaryTransaction_": {
                    "title": "Response«List«PrimaryTransaction»»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/PrimaryTransaction"
                            }
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_List_Project_": {
                    "title": "Response«List«Project»»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_List_Recepient_": {
                    "title": "Response«List«Recepient»»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Recepient"
                            }
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_List_SavingsAccount_": {
                    "title": "Response«List«SavingsAccount»»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/SavingsAccount"
                            }
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_List_SavingsTransaction_": {
                    "title": "Response«List«SavingsTransaction»»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/SavingsTransaction"
                            }
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_List_Transfers_": {
                    "title": "Response«List«Transfers»»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Transfers"
                            }
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_OrgUsers_": {
                    "title": "Response«OrgUsers»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "$ref": "#/components/schemas/OrgUsers"
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_Org_": {
                    "title": "Response«Org»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "$ref": "#/components/schemas/Org"
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_PrimaryAccount_": {
                    "title": "Response«PrimaryAccount»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "$ref": "#/components/schemas/PrimaryAccount"
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_PrimaryTransaction_": {
                    "title": "Response«PrimaryTransaction»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "$ref": "#/components/schemas/PrimaryTransaction"
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_Project_": {
                    "title": "Response«Project»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "$ref": "#/components/schemas/Project"
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_Recepient_": {
                    "title": "Response«Recepient»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "$ref": "#/components/schemas/Recepient"
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_SavingsAccount_": {
                    "title": "Response«SavingsAccount»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "$ref": "#/components/schemas/SavingsAccount"
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_SavingsTransaction_": {
                    "title": "Response«SavingsTransaction»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "$ref": "#/components/schemas/SavingsTransaction"
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_Transfers_": {
                    "title": "Response«Transfers»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "$ref": "#/components/schemas/Transfers"
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_Users_": {
                    "title": "Response«Users»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "$ref": "#/components/schemas/Users"
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "Response_boolean_": {
                    "title": "Response«boolean»",
                    "type": "object",
                    "properties": {
                        "data": {
                            "title": "data",
                            "type": "boolean"
                        },
                        "errors": {
                            "title": "errors",
                            "type": "boolean"
                        },
                        "messages": {
                            "title": "messages",
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Message"
                            }
                        },
                        "requestId": {
                            "title": "requestId",
                            "type": "string"
                        },
                        "requestTime": {
                            "title": "requestTime",
                            "type": "string",
                            "format": "date-time"
                        },
                        "totalElements": {
                            "title": "totalElements",
                            "format": "int64",
                            "type": "integer"
                        },
                        "totalPages": {
                            "title": "totalPages",
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                },
                "SavingsAccount": {
                    "title": "SavingsAccount",
                    "type": "object",
                    "properties": {
                        "accountBalance": {
                            "title": "accountBalance",
                            "format": "double",
                            "type": "number"
                        },
                        "accountNumber": {
                            "title": "accountNumber",
                            "format": "int32",
                            "type": "integer"
                        },
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "user": {
                            "title": "user",
                            "$ref": "#/components/schemas/NameDto"
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "SavingsTransaction": {
                    "title": "SavingsTransaction",
                    "type": "object",
                    "properties": {
                        "amount": {
                            "title": "amount",
                            "format": "double",
                            "type": "number"
                        },
                        "availableBalance": {
                            "title": "availableBalance",
                            "format": "double",
                            "type": "number"
                        },
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": {
                            "title": "description",
                            "type": "string"
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "status": {
                            "title": "status",
                            "type": "string"
                        },
                        "type": {
                            "title": "type",
                            "type": "string"
                        },
                        "user": {
                            "title": "user",
                            "$ref": "#/components/schemas/NameDto"
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "Transfers": {
                    "title": "Transfers",
                    "type": "object",
                    "properties": {
                        "confirmed": {
                            "title": "confirmed",
                            "type": "boolean"
                        },
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "description": {
                            "title": "description",
                            "type": "string"
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "location": {
                            "title": "location",
                            "type": "string"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "transactionType": {
                            "title": "transactionType",
                            "enum": [
                                "DEPOSIT",
                                "WITHDRAW",
                                "CHARGE",
                                "ATM",
                                "ONLINE",
                                "POS",
                                "TRANSFER",
                                "CHECK"
                            ],
                            "type": "string"
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "UserMinimalDto": {
                    "title": "UserMinimalDto",
                    "type": "object",
                    "properties": {
                        "company": {
                            "title": "company",
                            "type": "string"
                        },
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "email": {
                            "title": "email",
                            "type": "string"
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "jobTitle": {
                            "title": "jobTitle",
                            "type": "string"
                        },
                        "location": {
                            "title": "location",
                            "type": "string"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "name": {
                            "title": "name",
                            "type": "string"
                        },
                        "username": {
                            "title": "username",
                            "type": "string"
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                },
                "Users": {
                    "title": "Users",
                    "type": "object",
                    "properties": {
                        "accountNonExpired": {
                            "title": "accountNonExpired",
                            "type": "boolean"
                        },
                        "accountNonLocked": {
                            "title": "accountNonLocked",
                            "type": "boolean"
                        },
                        "company": {
                            "title": "company",
                            "type": "string"
                        },
                        "createdBy": {
                            "title": "createdBy",
                            "type": "string"
                        },
                        "createdDate": {
                            "title": "createdDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "credentialsNonExpired": {
                            "title": "credentialsNonExpired",
                            "type": "boolean"
                        },
                        "email": {
                            "title": "email",
                            "type": "string"
                        },
                        "enabled": {
                            "title": "enabled",
                            "type": "boolean"
                        },
                        "id": {
                            "title": "id",
                            "type": "string"
                        },
                        "inactive": {
                            "title": "inactive",
                            "type": "boolean"
                        },
                        "jobTitle": {
                            "title": "jobTitle",
                            "type": "string"
                        },
                        "location": {
                            "title": "location",
                            "type": "string"
                        },
                        "modifiedBy": {
                            "title": "modifiedBy",
                            "type": "string"
                        },
                        "modifiedDate": {
                            "title": "modifiedDate",
                            "type": "string",
                            "format": "date-time"
                        },
                        "name": {
                            "title": "name",
                            "type": "string"
                        },
                        "password": {
                            "title": "password",
                            "type": "string"
                        },
                        "privileges": {
                            "title": "privileges",
                            "type": "array",
                            "items": {
                                "title": "items",
                                "type": "string"
                            }
                        },
                        "username": {
                            "title": "username",
                            "type": "string"
                        },
                        "version": {
                            "title": "version",
                            "format": "int64",
                            "type": "integer"
                        }
                    }
                }
            },
            "responses": {},
            "parameters": {},
            "examples": {},
            "requestBodies": {},
            "headers": {},
            "securitySchemes": {},
            "links": {},
            "callbacks": {}
        }
    },
    "error": false,
    "Message": []
}